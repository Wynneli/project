<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wynne.Dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.wynne.Entity.UserCustom" >
    <id column="UserID" property="userid" jdbcType="INTEGER" />
    <result column="UserName" property="username" jdbcType="VARCHAR" />
    <result column="UserPassword" property="userpassword" jdbcType="VARCHAR" />
    <result column="UserPhone" property="userphone" jdbcType="CHAR" />
    <result column="UserEmail" property="useremail" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    UserID, UserName, UserPassword, UserPhone, UserEmail
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where UserID = #{userid,jdbcType=INTEGER}
  </select>
  
  <select id="selectByUserPhone" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from user
    where UserPhone = #{userphone,jdbcType=CHAR}
  </select>
  
  
  <select id="Obscure_select" resultMap="BaseResultMap" parameterType="com.wynne.Entity.UserCustom">
    select 
    <include refid="Base_Column_List" />
    from user
    where UserID like  CONCAT('%',#{userid},'%')  or UserName  like  CONCAT('%',#{username},'%')
  </select>
  
  <select id="selectAllUser" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from user
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where UserID = #{userid,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert" parameterType="com.wynne.Entity.UserCustom" >
    insert into user (UserID, UserName, UserPassword, 
      UserPhone, UserEmail)
    values (#{userid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{userpassword,jdbcType=VARCHAR}, 
      #{userphone,jdbcType=CHAR}, #{useremail,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.wynne.Entity.UserCustom" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        UserID,
      </if>
      <if test="username != null" >
        UserName,
      </if>
      <if test="userpassword != null" >
        UserPassword,
      </if>
      <if test="userphone != null" >
        UserPhone,
      </if>
      <if test="useremail != null" >
        UserEmail,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="userpassword != null" >
        #{userpassword,jdbcType=VARCHAR},
      </if>
      <if test="userphone != null" >
        #{userphone,jdbcType=CHAR},
      </if>
      <if test="useremail != null" >
        #{useremail,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.wynne.Entity.UserCustom">
    update user
    <set >
      <if test="username != null" >
        UserName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="userpassword != null" >
        UserPassword = #{userpassword,jdbcType=VARCHAR},
      </if>
      <if test="userphone != null" >
        UserPhone = #{userphone,jdbcType=CHAR},
      </if>
      <if test="useremail != null" >
        UserEmail = #{useremail,jdbcType=VARCHAR},
      </if>
    </set>
    where UserID = #{userid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wynne.Entity.UserCustom" >
    update user
    set UserName = #{username,jdbcType=VARCHAR},
      UserPassword = #{userpassword,jdbcType=VARCHAR},
      UserPhone = #{userphone,jdbcType=CHAR},
      UserEmail = #{useremail,jdbcType=VARCHAR}
    where UserID = #{userid,jdbcType=INTEGER}
  </update>
</mapper>