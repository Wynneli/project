<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-4.0.xsd 
       http://www.springframework.org/schema/context 
	   http://www.springframework.org/schema/context/spring-context-4.0.xsd 
	   http://www.springframework.org/schema/mvc 
	   http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
	   http://www.springframework.org/schema/aop 
	   http://www.springframework.org/schema/aop/spring-aop.xsd
	   http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">


	<mvc:annotation-driven />

	<mvc:default-servlet-handler />

	<aop:aspectj-autoproxy proxy-target-class="false" />

	<!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
	<context:component-scan base-package="com.wynne.Controller" />
	<context:component-scan base-package="com.wynne.Service" />





	<!-- 定义跳转的文件的前后缀，视图模式配置 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个可用的url地址 -->
		<property name="prefix" value="/Page/" />
		<property name="suffix" value=".jsp" />
	</bean>


	<!--解析返回JSON -->
	<!-- <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"> -->
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" />
			</list>
		</property>
	</bean>
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	<!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 默认编码 -->
		<property name="defaultEncoding" value="utf-8" />
		<!-- 文件大小最大值 -->
		<property name="maxUploadSize" value="10485760000" />
		<!-- 内存中的最大值 -->
		<property name="maxInMemorySize" value="40960" />
	</bean>
 <!-- springmvc提供的简单异常处理器 -->
	<!--<bean
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">-->
		<!-- 定义默认的异常处理页面 -->
		<!-- <property name="defaultErrorView" value="/jsp/error" />-->
		
		<!-- 定义异常处理页面用来获取异常信息的变量名，也可不定义，默认名为exception -->
		
		<!-- <property name="exceptionAttribute" value="ex" />-->
		
		<!-- 定义需要特殊处理的异常，这是重要点 -->
		<!--
		<property name="exceptionMappings">
			<props>
				<prop key="com.wynne.customerException">/jsp/custom_error</prop>
			</props> -->
			<!-- 还可以定义其他的自定义异常 -->
		<!--  </property>
	</bean>-->

	<!-- Transaction manager for a single JDBC DataSource -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 开启注解方式声明事务 ,使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	
	
	<bean id="CustomerExceptionResolver" class="com.wynne.Exception.CustomerExceptionResolver"></bean> 
</beans>